/* implementation of:
default constructor
parameterized constructor
parameterized constructor
copy constructor
constructor overloading*/

#include<iostream>
#include<string.h>
using namespace std;
class A
{
	int num1,num2;
	public:
	A()
	{
		num1=-1;
		num2=-1;
	}
	A(int n)
	{
		num1=n;
	}
	A(int n,int x)
	{
		num1=n;
		num2=x;
	}
	void display()
	{
		cout<<"value of variable num1 is: "<<num1<<endl;
		cout<<"value of variable num2 is: "<<num2<<endl;
	}
	
};
class Name
{
	string first_name,last_name;
	public:
		Name(string x,string y)
		{
			first_name=x;
			last_name=y;
		}
		Name(Name &obj)
		{
		   first_name=obj.first_name;
		   last_name=obj.last_name;
		}
	       void display()
		{
			cout<<"first name: "<<first_name<<endl;
			cout<<"last name: "<<last_name;
		}
};
int main()
{
int n,x;
A obj;
cout<<"calling display using default constructor"<<endl;
       obj.display();
          cout<<"calling display using one parameter"<<endl;
	     cout<<"enter a integer value: ";
	        cin>>n;
	    	A obj1(n);
	   	      obj1.display();
			    cout<<"using constructor overloading"<<endl;
			    cout<<"enter two values";
			    cin>>n>>x;
			      A obj2(n,x);
		        	obj2.display();
				string p,q;
				cout<<"copy constructor using string"<<endl;
  cout<<"enter first and last name: ";
        cin>>p>>q;
        Name object(p,q);
	Name object1(object);
	object1.display();
	return 0;
}
